name: deploy-backend
permissions:
  id-token: write
  contents: read
on:
  workflow_call:
    inputs:
      stage:
        type: string
        required: true
      packages:
        type: string
        required: true
jobs:
  build:
    if: ${{ toJson(fromJson(inputs.packages)) != '[]' }}
    strategy:
      matrix:
        package: ${{ fromJSON(inputs.packages) }}
    runs-on: ubuntu-latest
    name: Deployment
    steps:
      - name: Checkout project
        uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.1
          check-latest: true
      - name: Build binary
        run: |
          cd src/${{ matrix.package }} && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -a -o main main.go && zip ${{ matrix.package }}.zip main
      - name: Configure credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: "eu-west-2"
      - name: Upload lambda code to s3
        run: |
          aws s3 cp ./src/${{ matrix.package }}/${{ matrix.package }}.zip s3://property-scraping-development-lambda-code
      - name: Publish lambda function
        run: |
          aws lambda update-function-code --function-name ${{ matrix.package }} --s3-bucket property-scraping-${{ inputs.stage }}-lambda-code --s3-key ${{ matrix.package }}.zip --publish | jq 'del(.Environment)'
